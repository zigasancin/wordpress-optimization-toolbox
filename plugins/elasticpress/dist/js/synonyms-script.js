!function(){"use strict";var e={1020:function(e,t,a){var n=a(1609),s=Symbol.for("react.element"),l=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,o=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function i(e,t,a){var n,l={},i=null,m=null;for(n in void 0!==a&&(i=""+a),void 0!==t.key&&(i=""+t.key),void 0!==t.ref&&(m=t.ref),t)r.call(t,n)&&!c.hasOwnProperty(n)&&(l[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps)void 0===l[n]&&(l[n]=t[n]);return{$$typeof:s,type:e,key:i,ref:m,props:l,_owner:o.current}}t.jsx=i},4848:function(e,t,a){e.exports=a(1020)},1609:function(e){e.exports=window.React}},t={};function a(n){var s=t[n];if(void 0!==s)return s.exports;var l=t[n]={exports:{}};return e[n](l,l.exports,a),l.exports}a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,{a:t}),t},a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)};var n=window.wp.element,s=window.wp.i18n,l=window.wp.components,r=window.wp.data,o=window.wp.notices;const c=(0,n.createContext)(),{Fill:i,Slot:m}=(0,l.createSlotFill)("SettingsPageAction"),u=({children:e,title:t})=>{const{createNotice:a,removeNotice:s}=(0,r.useDispatch)(o.store),{notices:u}=(0,r.useSelect)((e=>({notices:e(o.store).getNotices()})),[]),d=(0,n.useMemo)((()=>({ActionSlot:i,createNotice:a,removeNotice:s})),[a,s]);return React.createElement(l.SlotFillProvider,null,React.createElement(c.Provider,{value:d},React.createElement("div",{className:"ep-settings-page"},React.createElement("div",{className:"ep-settings-page__wrap"},React.createElement("header",{className:"ep-settings-page__header"},React.createElement("h1",{className:"ep-settings-page__title"},t),React.createElement(m,null)),e),React.createElement(l.SnackbarList,{className:"ep-settings-page__snackbar-list",notices:u,onRemove:e=>s(e)}))))},d=()=>(0,n.useContext)(c),{apiUrl:p,defaultIsSolr:y,defaultSolr:h,syncUrl:f}=window.epSynonyms;var _=window.wp.apiFetch,R=a.n(_);var E={randomUUID:"undefined"!==typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let g;const v=new Uint8Array(16);const b=[];for(let e=0;e<256;++e)b.push((e+256).toString(16).slice(1));function w(e,t=0){return(b[e[t+0]]+b[e[t+1]]+b[e[t+2]]+b[e[t+3]]+"-"+b[e[t+4]]+b[e[t+5]]+"-"+b[e[t+6]]+b[e[t+7]]+"-"+b[e[t+8]]+b[e[t+9]]+"-"+b[e[t+10]]+b[e[t+11]]+b[e[t+12]]+b[e[t+13]]+b[e[t+14]]+b[e[t+15]]).toLowerCase()}var S=function(e,t,a){if(E.randomUUID&&!t&&!e)return E.randomUUID();const n=(e=e||{}).random??e.rng?.()??function(){if(!g){if("undefined"===typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");g=crypto.getRandomValues.bind(crypto)}return g(v)}();if(n.length<16)throw new Error("Random bytes length must be >= 16");if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){if((a=a||0)<0||a+16>t.length)throw new RangeError(`UUID byte range ${a}:${a+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[a+e]=n[e];return t}return w(n)};const x=e=>e.primary,C=e=>!e.primary,k=(e=[],t="")=>({id:t.length?t:S(),synonyms:e,valid:!0}),M=({synonyms:e})=>[e.filter(x),e.filter(C)].map((e=>e.map((e=>e.value.trim())).filter((e=>!!e)).join(", "))).filter((e=>e)).join(" => "),N=e=>{const t=e.synonyms.filter(x);return 1===t.length&&e.synonyms.filter(C).some((e=>t.some((t=>t.value===e.value))))},F=e=>{const t=e.filter(x),a=e.filter(C).filter((e=>!t.some((t=>t.value===e.value))));return 1===t.length&&a.length>0},H=({synonyms:e})=>!N({synonyms:e})&&e.some(x),D=e=>!N({synonyms:e})&&e.some(x)&&e.some(C),P=({synonyms:e})=>e.every(C),B=e=>e.length>1&&e.every(C),U=e=>{const t=e.filter(P).map(M),a=e.filter(N).map(M),n=e.filter(H).map(M);return[(0,s.__)("# Defined synonyms.","elasticpress"),"",...t,"",(0,s.__)("# Defined hyponyms.","elasticpress"),"",...a,"",(0,s.__)("# Defined replacements.","elasticpress"),"",...n,""].join("\n")},I=e=>e.split(/\r?\n/).reduce(((e,t)=>{if(0===t.indexOf("#"))return e;if(0===t.trim().length)return e;const a=(e=>e.split("=>").map(((e,t,a)=>{const n=e.split(",").map((e=>e.trim())).filter((e=>e));return n.filter(((e,t)=>n.indexOf(e)===t)).filter((e=>e)).map((e=>({label:e,value:e,primary:2===a.length&&0===t})))})).flat())(t),n=k(a);return e.push(n),e}),[]),V=(0,n.createContext)(),L=({apiUrl:e,children:t,defaultIsSolr:a,defaultSolr:s})=>{const l=(0,n.useMemo)((()=>I(s)),[s]),[r,o]=(0,n.useState)(null),[c,i]=(0,n.useState)(!1),[m,u]=(0,n.useState)(!1),[d,p]=(0,n.useState)(a),[y,h]=(0,n.useState)(l),[f,_]=(0,n.useState)(s),E=(0,n.useMemo)((()=>y.filter(N)),[y]),g=(0,n.useMemo)((()=>y.filter(H)),[y]),v=(0,n.useMemo)((()=>y.filter(P)),[y]),b=e=>{_(e),u(!1)},w=(0,n.useCallback)((e=>{const t=U(e);b(t)}),[]),S=(0,n.useCallback)((e=>{(e=>{h(e),u(!0)})(I(e))}),[]),x=()=>{h((e=>e.map((e=>{const t={...e};return N(t)?t.valid=F(t.synonyms):H(t)?t.valid=D(t.synonyms):t.valid=B(t.synonyms),t}))))},C=(0,n.useCallback)((()=>{d?S(f):w(y),p(!d),x()}),[d,y,f,S,w]);(0,n.useEffect)(x,[]);const M={addRule:e=>{const t=[...y,k(e)];h(t),u(!0)},deleteRules:e=>{const t=y.filter((t=>!e.includes(t.id)));h(t),u(!0)},hyponyms:E,isBusy:c,isHyponymsValid:F,isReplacementsValid:D,isSolr:d,isSynonymsValid:B,select:e=>{o(e)},selected:r,solr:f,replacements:g,save:async()=>{i(!0);const t=m?U(y):f;try{const a=await R()({body:JSON.stringify({mode:d?"advanced":"simple",solr:t}),headers:{"Content-Type":"application/json"},method:"PUT",url:e});b(a.data),S(a.data)}catch(e){throw console.error(e),e}finally{i(!1)}},switchEditor:C,synonyms:v,updateRule:(e,t)=>{const a=y.map((a=>a.id===e?k(t,e):a));h(a),u(!0)},updateSolr:b};return React.createElement(V.Provider,{value:M},t)},T=()=>(0,n.useContext)(V);var A=window.wp.primitives,j=()=>React.createElement(A.SVG,{version:"1.1",xmlns:"https://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},React.createElement(A.Path,{d:"M 12 20.8 C 16.8 20.8 20.8 16.9 20.8 12 C 20.8 7.2 16.9 3.2 12 3.2 C 7.2 3.2 3.2 7.1 3.2 12 C 3.2 16.8 7.2 20.8 12 20.8 Z M 12 4.8 C 16 4.8 19.2 8.1 19.2 12 C 19.2 16 16 19.2 12 19.2 C 8 19.2 4.8 15.9 4.8 12 C 4.8 8 8 4.8 12 4.8 Z M 13 7 L 11 7 L 11 13 L 13 13 L 13 7 Z M 13 15 L 11 15 L 11 17 L 13 17 L 13 15 Z"})),O=({children:e,isValid:t})=>React.createElement(l.Flex,{align:"center",justify:"start"},React.createElement(l.FlexItem,null,e),t?null:React.createElement(l.FlexItem,null,React.createElement(l.Icon,{icon:j})));var z=()=>{const{isBusy:e,solr:t,updateSolr:a}=T();return React.createElement(l.TextareaControl,{className:"ep-synonyms-solr-editor",disabled:e,label:(0,s.__)("Solr synonyms","elasticpress"),rows:"20",value:t,onChange:e=>{a(e)},__nextHasNoMarginBottom:!0})},q=window.wp.dom;var Z=(0,n.forwardRef)((({disabled:e,errorMessage:t,isNew:a,isValid:n,labels:r,mode:o,onChangePrimary:c,onChangeSynonyms:i,onReset:m,onSubmit:u,primaryValue:d,synonymsValue:p},y)=>React.createElement(l.Panel,{className:"ep-synonyms-edit-panel",ref:y},React.createElement(l.PanelHeader,null,React.createElement("h2",null,a?r.new:r.edit)),React.createElement(l.PanelBody,null,React.createElement("form",{onSubmit:u},t?React.createElement(l.Notice,{isDismissible:!1,status:"error"},t):null,"hyponyms"===o?React.createElement(l.TextControl,{disabled:e,label:r.primary,onChange:c,value:d.map((e=>e.value)).join(""),__nextHasNoMarginBottom:!0,__next40pxDefaultSize:!0}):null,"replacements"===o?React.createElement(l.FormTokenField,{disabled:e,label:r.primary,onChange:c,value:d.map((e=>e.value)),__nextHasNoMarginBottom:!0,__next40pxDefaultSize:!0}):null,React.createElement(l.FormTokenField,{disabled:e,label:r.synonyms,onChange:i,value:p.map((e=>e.value)),__nextHasNoMarginBottom:!0,__next40pxDefaultSize:!0}),React.createElement(l.Flex,{justify:"start"},React.createElement(l.FlexItem,null,React.createElement(l.Button,{disabled:e||!n,type:"submit",variant:"secondary"},a?r.add:(0,s.__)("Save changes","elasticpress"))),a?null:React.createElement(l.FlexItem,null,React.createElement(l.Button,{disabled:e,onClick:m,type:"button",variant:"tertiary"},(0,s.__)("Cancel","elasticpress"))))))))),$=a(4848);var G=(0,$.jsx)(A.SVG,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:(0,$.jsx)(A.Path,{fillRule:"evenodd",clipRule:"evenodd",d:"M12 5.5A2.25 2.25 0 0 0 9.878 7h4.244A2.251 2.251 0 0 0 12 5.5ZM12 4a3.751 3.751 0 0 0-3.675 3H5v1.5h1.27l.818 8.997a2.75 2.75 0 0 0 2.739 2.501h4.347a2.75 2.75 0 0 0 2.738-2.5L17.73 8.5H19V7h-3.325A3.751 3.751 0 0 0 12 4Zm4.224 4.5H7.776l.806 8.861a1.25 1.25 0 0 0 1.245 1.137h4.347a1.25 1.25 0 0 0 1.245-1.137l.805-8.861Z"})}),Y=({children:e,Colgroup:t,Head:a,onDelete:r,...o})=>{const[c,i]=(0,n.useState)([]),m=(0,n.useCallback)(((e,t)=>{const a=c.filter((t=>t!==e));t&&a.push(e),a.sort(((e,t)=>e-t)),i(a)}),[c]),u=(0,n.useCallback)((e=>{const t=c.filter((t=>t!==e)).reduce(((t,a)=>(t.push(a<e?a:a-1),t)),[]);r([e]),i(t)}),[c,r]),d=(0,n.useMemo)((()=>e({check:m,checked:c,remove:u})),[m,c,e,u]),p=(0,n.useCallback)((e=>{const t=e?d.map(((e,t)=>t)):[];t.sort(((e,t)=>e-t)),i(t)}),[d]),y=(0,n.useCallback)((()=>{i([]),r(c)}),[c,r]),h=(0,n.useMemo)((()=>c.length>0&&!d.some(((e,t)=>!c.includes(t)))),[c,d]),f=(0,n.useCallback)((()=>React.createElement(l.CheckboxControl,{checked:h,indeterminate:c.length&&!h,onChange:p,__nextHasNoMarginBottom:!0})),[c,h,p]),_=(0,n.useCallback)((()=>React.createElement(l.Button,{disabled:c.length<1,icon:G,label:(0,s.__)("Delete selected","elasticpress"),onClick:y})),[c,y]);return React.createElement(l.Panel,null,React.createElement("table",o,React.createElement("colgroup",null,React.createElement(t,null)),React.createElement("thead",null,React.createElement(a,{CheckAllControl:f,DeleteCheckedButton:_})),React.createElement("tbody",null,d)))};var J=(0,$.jsx)(A.SVG,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:(0,$.jsx)(A.Path,{d:"m19 7-3-3-8.5 8.5-1 4 4-1L19 7Zm-7 11.5H5V20h7v-1.5Z"})}),W=({disabled:e,errorMessage:t,isSelected:a,onSelect:n,onDelete:r})=>React.createElement(l.Flex,{justify:"end"},React.createElement(l.FlexItem,null,t?React.createElement(l.Tooltip,{delay:0,placement:"bottom",text:t},React.createElement("div",{className:"ep-synonyms-error-badge"},React.createElement(l.Icon,{icon:j}))):null),React.createElement(l.FlexItem,null,React.createElement(l.Button,{disabled:e,icon:J,isPressed:a,label:(0,s.__)("Edit","elasticpress"),onClick:n})),React.createElement(l.FlexItem,null,React.createElement(l.Button,{disabled:e,icon:G,label:(0,s.__)("Delete","elasticpress"),onClick:r}))),K=({labels:e,messages:t,mode:a,rules:s})=>{const{createNotice:r}=d(),{addRule:o,deleteRules:c,isBusy:i,isHyponymsValid:m,isReplacementsValid:u,isSynonymsValid:p,select:y,selected:h,updateRule:f}=T(),_=(0,n.useRef)(),[R,E]=(0,n.useState)([]),[g,v]=(0,n.useState)([]),b=(0,n.useMemo)((()=>s.find((e=>e.id===h))),[s,h]),w=(0,n.useMemo)((()=>{const e=[...R,...g];switch(a){case"hyponyms":return m(e);case"replacements":return u(e);default:return p(e)}}),[m,u,p,a,R,g]),S=(0,n.useCallback)((e=>e.primary),[]),x=(0,n.useCallback)(((e,t,n)=>("hyponyms"!==a||!n.some((t=>t.primary&&t.value===e.value)))&&!e.primary),[a]),C=(0,n.useCallback)((()=>React.createElement(React.Fragment,null,React.createElement("col",{className:"ep-synonyms-list-table__checkbox-column"}),e.primary?React.createElement("col",{className:"ep-synonyms-list-table__primary-column"}):null,React.createElement("col",{className:"ep-synonyms-list-table__synonyms-column"}),React.createElement("col",{className:"ep-synonyms-list-table__actions-column"}))),[e]),k=(0,n.useCallback)((({CheckAllControl:t,DeleteCheckedButton:a})=>React.createElement("tr",null,React.createElement("th",null,React.createElement(t,null)),e.primary?React.createElement("th",null,e.primary):null,React.createElement("th",null,e.synonyms),React.createElement("th",null,React.createElement(l.Flex,{justify:"end"},React.createElement(l.FlexItem,null,React.createElement(a,null)))))),[e]);return(0,n.useEffect)((()=>{if(b){const e=b.synonyms.filter(S),t=b.synonyms.filter(x);E(e),v(t),_.current.scrollIntoView({behavior:"smooth",block:"center"})}else E([]),v([])}),[b,S,x,a]),React.createElement(React.Fragment,null,React.createElement(Z,{disabled:i,errorMessage:!b||b.valid||w?null:t.invalid,isNew:!b,isValid:w,labels:e,mode:a,onChangePrimary:e=>{const t=("string"===typeof e?[e]:e).map((e=>({label:e,primary:!0,value:e})));E(t)},onChangeSynonyms:e=>{const t=e.map((e=>({label:e,primary:!1,value:e})));v(t)},onReset:()=>{y(null)},onSubmit:e=>{e.preventDefault();let n=g;if("hyponyms"===a){const e=R.find((e=>e.value));n=[{...e,primary:!1},...g.filter((t=>t.value!==e.value))]}const s=[...R,...n];b?(f(b.id,s),r("success",t.updated),y(null)):(o(s),r("success",t.added),E([]),v([]))},primaryValue:R,ref:_,synonymsValue:g}),React.createElement(Y,{className:`ep-synonyms-list-table ep-synonyms-list-table--${a}`,Colgroup:C,Head:k,onDelete:e=>{const a=e.filter((e=>s[e])).map((e=>s[e].id));c(a),r("success",t.deleted)}},(({check:a,checked:n,remove:r})=>s.map(((s,o)=>React.createElement("tr",{key:s.id},React.createElement("td",null,React.createElement(l.CheckboxControl,{checked:n.includes(o),onChange:e=>a(o,e),__nextHasNoMarginBottom:!0})),e.primary?React.createElement("td",null,s.synonyms.filter(S).map((e=>e.value)).join(", ")):null,React.createElement("td",null,s.synonyms.filter(x).map((e=>e.value)).join(", ")),React.createElement("td",null,React.createElement(W,{disabled:i,errorMessage:s.valid?null:t.invalid,isSelected:h===s.id,onDelete:()=>r(o),onSelect:()=>y(s.id)}))))))))},Q=()=>{const{hyponyms:e}=T();return React.createElement(React.Fragment,null,React.createElement(n.RawHTML,null,(0,q.safeHTML)((0,s.__)("<p><strong>Hyponyms</strong> are terms with a more specific meaning than another more generic terms, called a <strong>hypernym</strong>. For example, <em>aqua</em>, <em>azure</em>, and <em>cerulean</em> are all hyponyms of <em>blue</em>, their hypernym.</p>","elasticpress")),(0,q.safeHTML)((0,s.__)('<p>Use hyponyms when you want search queries for a parent term to return results relevant to itself or any of its child terms, but search queries for a child term to only return results that are relevant to that term. For example, when a search for "blue" should return anything blue, whether it be aqua, azure, or cerulean, but a search for "cerulean" should return only items that are specifically cerulean blue.</p>',"elasticpress"))),React.createElement(K,{labels:{add:(0,s.__)("Add hyponyms","elasticpress"),edit:(0,s.__)("Edit Hyponyms","elasticpress"),new:(0,s.__)("Add Hyponyms","elasticpress"),primary:(0,s.__)("Hypernym","elasticpress"),synonyms:(0,s.__)("Hyponyms","elasticpress")},messages:{added:(0,s.__)("Added hyponyms.","elasticpress"),deleted:(0,s.__)("Deleted hyponyms.","elasticpress"),invalid:(0,s.__)("Hyponym sets require a hypernym and at least one hyponym that is not the hypernym.","elasticpress"),updated:(0,s.__)("Updated hyponyms.","elasticpress")},mode:"hyponyms",rules:e}))},X=()=>{const{replacements:e}=T();return React.createElement(React.Fragment,null,React.createElement(n.RawHTML,null,(0,q.safeHTML)((0,s.__)("<p><strong>Replacements</strong> are terms that replace other incorrect or obsolete terms.</p>","elasticpress")),(0,q.safeHTML)((0,s.__)('<p>Use replacements when you want search queries for certain terms to return results that are only relevant to another term, or set of terms. This can be useful for supporting specific typos or incorrect phrasing. For example, when a search for the phrase "intensive purposes" should only return results including the phrase "intents and purposes".</p>',"elasticpress"))),React.createElement("p",null,(0,n.createInterpolateElement)((0,s.__)("You may need to <a>disable fuzziness</a> to have it working properly.","elasticpress"),{a:React.createElement("a",{target:"_blank",href:"https://www.elasticpress.io/documentation/article/how-to-disable-fuzziness/",rel:"noreferrer"})})),React.createElement(K,{labels:{add:(0,s.__)("Add replacements","elasticpress"),edit:(0,s.__)("Edit Replacements","elasticpress"),new:(0,s.__)("Add Replacements","elasticpress"),primary:(0,s.__)("Terms","replacements"),synonyms:(0,s.__)("Replacements","elasticpress")},messages:{added:(0,s.__)("Added replacements.","elasticpress"),deleted:(0,s.__)("Deleted replacements.","elasticpress"),invalid:(0,s.__)("Replacement sets require at least one term and one replacement.","elasticpress"),updated:(0,s.__)("Updated replacements.","elasticpress")},mode:"replacements",rules:e}))},ee=()=>{const{synonyms:e}=T();return React.createElement(React.Fragment,null,React.createElement(n.RawHTML,null,(0,q.safeHTML)((0,s.__)("<p><strong>Synonyms</strong> are terms with similar meanings. For example, <em>sneaker</em>, <em>tennis shoe</em>, <em>trainer</em>, and <em>running shoe</em> could all refer to a particular type of shoe.</p>","elasticpress")),(0,q.safeHTML)((0,s.__)('<p>Use synonyms when you want queries for a specific term to also return results relevant to any of its synonyms. This can be useful for supporting products and services whose names have changed over time or regional variations in terminology. For example, when a search for "sneaker" should return sneakers, tennis shoes, trainers and running shoes.</p>',"elasticpress"))),React.createElement(K,{labels:{add:(0,s.__)("Add synonyms","elasticpress"),edit:(0,s.__)("Edit Synonyms","elasticpress"),new:(0,s.__)("Add Synonyms","elasticpress"),synonyms:(0,s.__)("Synonyms","elasticpress")},messages:{added:(0,s.__)("Added synonyms.","elasticpress"),deleted:(0,s.__)("Deleted synonyms.","elasticpress"),invalid:(0,s.__)("Synonym sets require at least two synonyms.","elasticpress"),updated:(0,s.__)("Updated synonyms.","elasticpress")},mode:"synonyms",rules:e}))},te=()=>{const{ActionSlot:e,createNotice:t}=d(),{isBusy:a,hyponyms:n,isSolr:r,replacements:o,save:c,synonyms:i,switchEditor:m,syncUrl:u}=T(),p=[{name:"synonyms",title:React.createElement(O,{isValid:!i.some((e=>!e.valid))},(0,s.sprintf)((0,s.__)("Synonyms (%d)","elasticpress"),i.length))},{name:"hyponyms",title:React.createElement(O,{isValid:!n.some((e=>!e.valid))},(0,s.sprintf)((0,s.__)("Hyponyms (%d)","elasticpress"),n.length))},{name:"replacements",title:React.createElement(O,{isValid:!o.some((e=>!e.valid))},(0,s.sprintf)((0,s.__)("Replacements (%d)","elasticpress"),o.length))}];return React.createElement(React.Fragment,null,React.createElement(e,null,React.createElement(l.Button,{onClick:()=>{m()},size:"small",type:"button",variant:"secondary"},r?(0,s.__)("Switch to visual editor","elasticpress"):(0,s.__)("Switch to advanced text editor","elasticpress"))),React.createElement("p",null,(0,s.__)("Synonym rules enable a more flexible search experience that returns relevant results even without an exact match. Rules can be defined as synonyms, for terms with similar meanings; hyponyms, for terms with a hierarchical relationship; or replacements, for corrections and substitutions.","elasticpress")),r?React.createElement(l.Panel,{className:"ep-synonyms-panel"},React.createElement(l.PanelHeader,null,React.createElement("h2",null,(0,s.__)("Advanced Synonyms Editor","elasticpress"))),React.createElement(l.PanelBody,null,React.createElement("p",null,(0,s.__)("ElasticPress uses the Solr format to define your synonym rules for Elasticsearch. Advanced users can use the field below to edit the synonym rules in this format directly. This can also be used to import a large dictionary of synonyms, or to export your synonyms for use on another site.","elasticpress")),React.createElement(z,null))):React.createElement(l.Panel,{className:"ep-synonyms-panel"},React.createElement(l.TabPanel,{tabs:p},(({name:e})=>React.createElement(l.PanelBody,null,(()=>{switch(e){case"hyponyms":return React.createElement(Q,null);case"replacements":return React.createElement(X,null);default:return React.createElement(ee,null)}}))))),React.createElement(l.Button,{disabled:a,isBusy:a,onClick:async e=>{e.preventDefault();try{await c(),t("success",(0,s.__)("Synonym settings saved.","elasticpress"))}catch(e){"error-update-index"===e.code?t("error",(0,s.__)("Could not update index with synonyms. Make sure your data is synced.","elasticpress"),{actions:[{url:u,label:(0,s.__)("Sync","elasticpress")}]}):t("error",(0,s.__)("Something went wrong. Please try again.","elasticpress"))}},type:"button",variant:"primary"},(0,s.__)("Save changes","elasticpress")))};const ae=()=>React.createElement(u,{title:(0,s.__)("Manage Synonyms","elasticpress")},React.createElement(L,{apiUrl:p,defaultIsSolr:y,defaultSolr:h,syncUrl:f},React.createElement(te,null))),ne=document.getElementById("ep-synonyms");if("function"===typeof n.createRoot){(0,n.createRoot)(ne).render(React.createElement(ae,null))}else(0,n.render)(React.createElement(ae,null),ne)}();