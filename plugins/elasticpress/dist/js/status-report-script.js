!function(){"use strict";var e=window.wp.element,t=window.wp.i18n,a=window.wp.components,n=window.wp.data,l=window.wp.notices;const r=(0,e.createContext)(),{Fill:s,Slot:c}=(0,a.createSlotFill)("SettingsPageAction"),o=({children:t,title:o})=>{const{createNotice:i,removeNotice:p}=(0,n.useDispatch)(l.store),{notices:u}=(0,n.useSelect)((e=>({notices:e(l.store).getNotices()})),[]),m=(0,e.useMemo)((()=>({ActionSlot:s,createNotice:i,removeNotice:p})),[i,p]);return React.createElement(a.SlotFillProvider,null,React.createElement(r.Provider,{value:m},React.createElement("div",{className:"ep-settings-page"},React.createElement("div",{className:"ep-settings-page__wrap"},React.createElement("header",{className:"ep-settings-page__header"},React.createElement("h1",{className:"ep-settings-page__title"},o),React.createElement(c,null)),t),React.createElement(a.SnackbarList,{className:"ep-settings-page__snackbar-list",notices:u,onRemove:e=>p(e)}))))},{plainTextReport:i,reports:p}=window.epStatusReport;var u=window.wp.compose,m=window.wp.htmlEntities,d=({value:t})=>{if("object"===typeof t){const e=JSON.stringify(t,null,2);return React.createElement("pre",null,e)}if("string"===typeof t){if(0===t.indexOf("{"))try{const e=JSON.parse(t),a=JSON.stringify(e,null,2);return React.createElement("pre",null,a)}catch(e){return React.createElement("pre",null,t)}return React.createElement(e.RawHTML,null,t)}return t.toString()},R=({fields:e,title:t})=>React.createElement(a.PanelBody,{key:t,title:(0,m.decodeEntities)(t),initialOpen:!1},React.createElement("table",{cellPadding:"0",cellSpacing:"0",className:"wp-list-table widefat striped"},React.createElement("colgroup",null,React.createElement("col",null),React.createElement("col",null)),React.createElement("tbody",null,Object.entries(e).map((([e,{description:t="",label:a,value:n}])=>React.createElement("tr",{key:e},React.createElement("td",null,a,t?React.createElement("small",null,t):null),React.createElement("td",null,React.createElement(d,{value:n})))))))),E=window.wp.dom,g=({id:t,title:n,actions:l=[],messages:r=[],children:s})=>React.createElement(a.Panel,{id:n,className:"ep-status-report"},React.createElement(a.PanelHeader,null,React.createElement("h2",{id:t},n),l.map((({href:e,label:t})=>React.createElement(a.Button,{href:(0,m.decodeEntities)(e),isDestructive:!0,isSecondary:!0,isSmall:!0,key:e},t)))),r.map((({message:t,type:n})=>React.createElement(a.Notice,{status:n,isDismissible:!1},React.createElement(e.RawHTML,null,(0,E.safeHTML)(t))))),s),f=({actions:e,groups:t,id:a,messages:n,title:l,isAjaxReport:r})=>t.length<1&&!r?null:t.length<1&&r?React.createElement(g,{id:a,title:l,actions:e,messages:n}):React.createElement(g,{id:a,title:l,actions:e,messages:n},t.map((({fields:e,title:t})=>React.createElement(R,{key:t,fields:e,title:t})))),w=({plainTextReport:n,reports:l})=>{const{createNotice:s}=(0,e.useContext)(r),[c,o]=(0,e.useState)(l),[i,p]=(0,e.useState)(n),[m,d]=(0,e.useState)(!1),R=(0,t.__)(`Download ${m?"full":"partial"} status report`,"elasticpress"),E=(0,t.__)(`Copy ${m?"full":"partial"} status report to clipboard`,"elasticpress"),g=(0,u.useCopyToClipboard)(i,(()=>{s("info",(0,t.__)("Copied status report to clipboard.","elasticpress"))})),w=`data:text/plain;charset=utf-8,${encodeURIComponent(i)}`;function h(e,t,a){const n=`## ${t} ##\n\nPlease generate a full report to see the content of this group.`,l=((e,t)=>{let a=`## ${e} ##\n\n`;return t.forEach((e=>{a+=`### ${e.title} ###\n`,Object.entries(e.fields).forEach((([e,t])=>{const n=t.value??"";a+=`${e}: ${n}\n`})),a+="\n"})),a})(t,a);return e.replace(n,l)}return React.createElement(React.Fragment,null,React.createElement("p",null,(0,t.__)('This screen provides a list of information related to ElasticPress and synced content that can be helpful during troubleshooting. This list can also be copy/pasted and shared as needed. As the process can be resource-intensive, the report presented here is partial. You must click the "Generate Full Status Report" button to generate a full report.',"elasticpress")),React.createElement("p",null,React.createElement(a.Flex,{justify:"start"},React.createElement(a.FlexItem,null,React.createElement(a.Button,{id:"generate-full-report",disabled:m,onClick:async()=>{if(m)return;s("info",(0,t.__)("Generating full status report ...","elasticpress"));const e={...l},a=Object.entries(e).filter((([,e])=>e.isAjaxReport)).map((async([t,a])=>{const n=await(async e=>{const{ajaxurl:t}=window,a=new FormData;return a.append("action","ep_load_groups"),a.append("ep-status-report-nonce",window.epStatusReport.nonce),a.append("report",e),fetch(t,{method:"POST",body:a})})(t),l=await n.json();n.ok?e[t]={...a,groups:l.data.groups,messages:l.data.messages}:l.data.message&&s("info",l.data.message)}));await Promise.all(a),o(e);let r=n;Object.entries(e).filter((([,e])=>e.isAjaxReport)).forEach((([,e])=>{r=h(r,e.title,e.groups||[])})),p(r),d(!0),s("info",(0,t.__)("Successfully generated status report.","elasticpress"))},variant:"primary"},(0,t.__)("Generate Full Status Report","elasticpress"))),React.createElement(a.FlexItem,null,React.createElement(a.Button,{id:"download-report",download:"elasticpress-report.txt",href:w,variant:"primary"},R)),React.createElement(a.FlexItem,null,React.createElement(a.Button,{id:"copy-report",ref:g,variant:"secondary"},E)))),Object.entries(c).map((([e,{actions:t,groups:a,messages:n,title:l,isAjaxReport:r}])=>React.createElement(f,{key:e,id:e,title:l,actions:t,groups:a,messages:n,isAjaxReport:r}))))};const h=()=>React.createElement(o,{title:(0,t.__)("Status Report","elasticpress")},React.createElement(w,{plainTextReport:i,reports:p}));if("function"===typeof e.createRoot){(0,e.createRoot)(document.getElementById("ep-status-reports")).render(React.createElement(h,null))}else(0,e.render)(React.createElement(h,null),document.getElementById("ep-status-reports"))}();